#!/usr/bin/env python
PACKAGE='carrt_goggles'
from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()

gen.add("prefilter_cap",        int_t,      0, "Truncation value for the prefiltered image pixels. The algorithm first computes x-derivative at each pixel and clips its value by [-preFilterCap, preFilterCap] interval.", 10, 1, 63)
gen.add("prefilter_size",       int_t,      0, "Normalization window size, pixels", 11, 5, 255)

gen.add("smaller_block_size",   int_t,      0, "NA", 0, 0, 255)
gen.add("texture_threshold",    int_t,      0, "Filter out if SAD window response does not exceed texture threshold", 0, 0, 9000)
gen.add("uniqueness_ratio",     double_t,   0, "Filter out if best match does not sufficiently exceed the next-best match", 5, 0, 100)

gen.add("block_size",           int_t,      0, "Matched block size. It must be an odd number >=1 . Normally, it should be somewhere in the 3..11 range.", 13, 5, 255)

gen.add("min_disparity",        int_t,      0, "Disparity to begin search at, pixels (may be negative)", 4, -128, 128)
gen.add("num_disparities",      int_t,      0, "Number of disparities to search, pixels", 80, 32, 256)
gen.add("speckle_range",        int_t,      0, "Max allowed difference between detected disparities", 4, 0, 31)
gen.add("speckle_window_size",  int_t,      0, "Reject regions smaller than this size, pixels", 500, 0, 1000)

gen.add("y_offset",             int_t,      0, "y-offset of the right image.", 26, -300, 300)

gen.add("sgbm",                 bool_t,     0, "Takes more computational power, but detects non-textured surfaces better.", False)
gen.add("mode",                 bool_t,     0, "Run the full-scale two-pass dynamic programming algorithm.", False)
gen.add("p1",                   int_t,      0, "The first parameter controlling the disparity smoothness.This parameter is used for the case of slanted surfaces (not fronto parallel", 19, 5, 10000)
gen.add("p2",                   int_t,      0, "The second parameter controlling the disparity smoothness. This parameter is used for solving the depth discontinuities problem. The algorithm requires P2 > P1", 19, 5, 10000)
gen.add("disp12MaxDiff",        int_t,      0, "Maximum allowed difference (in integer pixel units) in the left-right disparity check. Set it to a non-positive value to disable the check.", -1, -1, 128)

exit(gen.generate(PACKAGE, "carrt_goggles", "Disparity"))
